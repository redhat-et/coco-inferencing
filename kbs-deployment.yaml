apiVersion: v1
kind: ConfigMap
metadata:
  name: kbs-config
data:
  kbs-config.toml: |
    [http_server]
    sockets = ["0.0.0.0:8080"]
    insecure_http = false
    private_key = "/etc/kbs/tls/key.pem"
    certificate = "/etc/kbs/tls/cert.pem"
    
    [admin]
    auth_public_key = "/etc/kbs/auth/public.pub"
    insecure_api = false
    
    [attestation_service]
    type = "coco_as_builtin"
    as_url = "http://mock-attestation-service:8080"
    
    [policy_engine]
    policy_type = "opa"
    policy_path = "/etc/kbs/policy.rego"
    
    [[plugins]]
    name = "resource"
    type = "LocalFs"
    dir_path = "/opt/confidential-containers/kbs/repository"

  policy.rego: |
    package policy

    import future.keywords.if

    # Demo policy - can be easily modified for allow/deny scenarios
    default allow := false

    # Allow if attestation shows valid TEE (simulated)
    allow if {
        input.tee_evidence.platform == "simulated-tee"
        input.tee_evidence.security_version >= 1
        input.resource_policy.allow_access == true
    }

    # Allow if demo mode is enabled (for easy testing)
    allow if {
        input.demo_mode == true
    }

---
apiVersion: v1
kind: Service
metadata:
  name: kbs-service
spec:
  selector:
    app: kbs
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kbs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kbs
  template:
    metadata:
      labels:
        app: kbs
    spec:
      initContainers:
      - name: setup-repository
        image: busybox:1.36
        command: ['sh', '-c', 'mkdir -p /repository && echo "Repository initialized"']
        volumeMounts:
        - name: kbs-secrets
          mountPath: /repository
      containers:
      - name: kbs
        image: ghcr.io/confidential-containers/staged-images/kbs:latest
        command: ["/usr/local/bin/kbs"]
        args: ["--config-file", "/etc/kbs/kbs-config.toml"]
        ports:
        - containerPort: 8080
        env:
        - name: KBS_CONFIG_FILE
          value: "/etc/kbs/kbs-config.toml"
        volumeMounts:
        - name: kbs-config
          mountPath: /etc/kbs
        - name: kbs-secrets
          mountPath: /opt/confidential-containers/kbs/repository
        - name: kbs-tls
          mountPath: /etc/kbs/tls
        - name: kbs-auth
          mountPath: /etc/kbs/auth
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: kbs-config
        configMap:
          name: kbs-config
      - name: kbs-secrets
        emptyDir: {}
      - name: kbs-tls
        secret:
          secretName: kbs-tls-certs
      - name: kbs-auth
        secret:
          secretName: kbs-auth-keys

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kbs-secrets
data:
  # Base64 encoded private key (will be populated by make target)
  private.key: ""
